// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package facade

import (
	"github.com/william-lg/go-exercises/lang/go_wire/config"
	"github.com/william-lg/go-exercises/lang/go_wire/manager"
	"github.com/william-lg/go-exercises/lang/go_wire/repo/mysql"
	"github.com/william-lg/go-exercises/lang/go_wire/service"
	"github.com/william-lg/go-exercises/lang/go_wire/third_party/live"
	"github.com/william-lg/go-exercises/lang/go_wire/third_party/sls"
)

// Injectors from injector.go:

func InitLocationFacade() *LocationFacade {
	whs := mysql.NewWhsRepo()
	location := mysql.NewLocationRepo()
	slsConfig := config.NewSlsConfig()
	serviceImpl := sls.NewServiceImpl(slsConfig)
	webapiConfig := config.NewWebapiConfig()
	wmsServiceImpl := live.NewWmsServiceImpl(slsConfig, webapiConfig)
	locationManager := manager.NewLocationManager(whs, location, serviceImpl, wmsServiceImpl)
	locationService := service.NewLocationService(locationManager)
	locationFacade := NewLocationFacade(locationService)
	return locationFacade
}

func InitWhsFacade() *WhsFacade {
	whs := mysql.NewWhsRepo()
	slsConfig := config.NewSlsConfig()
	serviceImpl := sls.NewServiceImpl(slsConfig)
	whsManager := manager.NewWhsManager(whs, serviceImpl)
	location := mysql.NewLocationRepo()
	webapiConfig := config.NewWebapiConfig()
	wmsServiceImpl := live.NewWmsServiceImpl(slsConfig, webapiConfig)
	locationManager := manager.NewLocationManager(whs, location, serviceImpl, wmsServiceImpl)
	locationService := service.NewLocationService(locationManager)
	whsService := service.NewWhsService(whsManager, locationService)
	whsFacade := NewWhsFacade(whsService, locationService)
	return whsFacade
}
